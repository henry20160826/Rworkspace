{
    "collab_server" : "",
    "contents" : "library(e1071)\nlibrary(caret)\nlibrary(ROCR)\n#读取数据\noriginal_data<-read.table(\"E:\\\\graduated life\\\\pattern recognition\\\\data.txt\",header = T)\n#空缺的喜好数据按0.5处理，表示对这个喜好中立\nd<-original_data[,c(4,5,7,8,9,10)]\n#按列归一化数据\nfor(i in 1:6)\n{\n  d[,i]<-scale(d[,i])\n}\n#R能直接计算协方差矩阵，也是醉了，自己写了那么多\no<-cov(d)\nprint(o)\nk<-norm(o,\"O\")*norm(solve(o),\"O\")\nprint(k)\n# #是否归一化对特征值影响很大,但实际分类时，差别不大\n# mean_vector<-function(data)\n# {\n#   len<-dim(data)[2]#data列数\n#   r<-vector(mode=\"numeric\",length = len)\n#   for(i in 1:len)\n#   {\n#     r[i]<-mean(data[,i])\n#   }\n#   return(r)\n# }\n# Ed<-mean_vector(d)#总体的均值矢量\n# matrix<-0\n# for(i in 1:149)\n# {\n#   v<-as.matrix(d[i,])-Ed\n#   print(v)\n#   m=t(v)%*%v\n#   matrix<-matrix+m\n# }\n# #得到协方差矩阵\n# o<-matrix/149\n# print(o)\n#计算特征值和特征向量\neigenResult=eigen(o)\nlambda=eigenResult[[1]]\nlambda_vecror=eigenResult[[2]]\nsum1_lambda=lambda/sum(lambda)\nplot(type = 'o',sum1_lambda,main=\"数据中心化标准化后的特征值图\",ylim=c(0,0.35))\n# print(format(sum1_lambda,digits = 2))\ntext(sum1_lambda,paste(format(sum1_lambda,digits = 2)),pos = 3)\n#eigen()求得的特征向量以列向量的方式放在矩阵中\nnewd<-matrix(0,149,6)\n#对原始特征进行变换\nfor(i in 1:6)\n{\n  for(j in 1:149)\n  {\n    v1=as.numeric(d[j,])\n    v2=lambda_vecror[,i]\n    newd[j,i]<-v1%*%v2\n  }\n}\n\n# print(t(lambda_vecror)%*%lambda_vecror)#得到的是标准正交化的特征向量\n\n#newd为使用特征向量变换后的新特征数据\n#为newd添加性别列\n\nnewd<-data.frame(original_data[,2],newd)\nd<-newd\nprintPredictResult<-function()\n{\n  print(confusionMatrix(bpred,trueSex,positive = \"1\"))\n  # 画出ROC曲线\n  pred <- prediction(pred,trueSex)\n  perf <- performance(pred,\"tpr\",\"fpr\")\n  #男生女生按数量分开时auc值变化不大\n  auc<-performance(pred,\"auc\")\n  print(auc)\n  plot(perf,colorize=TRUE)\n}\nktime=10\nfold=createFolds(original_data$num,k=ktime)\npred=NULL\nbpred<-NULL\ntrueSex<-NULL\nfor(i in 1:ktime)\n{\n  lie<-c (2,3,4,5,6)\n  x<-d[-fold[[i]],lie]\n  y<-as.factor(d[-fold[[i]],1])\n  # 训练svm模型\n  model <- svm(x,y, data = inputData, kernel = \"polynomial\", cost = 10, scale = TRUE)\n  # print(model)\n  #预测模型\n  x<-d[fold[[i]],lie]\n  y<-as.factor(d[fold[[i]],1])\n  trueSex<-c(trueSex,y)\n  temppred<-predict(model,x,decision.values = TRUE)\n  temppred<-attr(temppred,\"decision.values\")\n  pred<-c(pred,temppred)\n  # print(pred)\n  tempbpred<-as.numeric(predict(model,x,decision.values = FALSE))\n  bpred<-c(bpred,tempbpred)\n  # print(bpred)\n}\nbpred<-as.factor(bpred-1)\ntrueSex<-as.factor(trueSex-1)\nprintPredictResult()\nprint(sum1_lambda)\n",
    "created" : 1478084337922.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "972196904",
    "id" : "4F8E5F08",
    "lastKnownWriteTime" : 1478260907,
    "last_content_update" : 1478260907,
    "path" : "G:/Rworkspace/PRhomework3/PCA.R",
    "project_path" : "PCA.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}